package cn.com.transcosmos.training.mapper;

import java.util.List;

import org.apache.ibatis.jdbc.SQL;

import cn.com.transcosmos.training.domain.Condition;
import cn.com.transcosmos.training.domain.Person;

public class PersonFor366SqlProvider {
	/**
	 * 查
	 */
	public String select(Condition condition, List<String> dateList) {
		String sql;
		sql = "SELECT tbl_person.person_name,tbl_person.job,tbl_plan2." + dateList.get(0);
		for (int i = 1; i < dateList.size(); i++) {
			sql = sql + ", tbl_plan2." + dateList.get(i);
		}
		if (condition.getDeptId() != null && condition.getDeptId().toString() != "") {
			sql = sql
					+ " from tbl_plan2 , tbl_person where tbl_person.person_id = tbl_plan2.person_id and tbl_person.dept_id ="
					+ condition.getDeptId();
		} else {
			sql = sql + " from tbl_plan2 , tbl_person where tbl_person.person_id = tbl_plan2.person_id";
		}

		if (condition.getPersonName() != null && condition.getPersonName() != "") {
			sql = sql + "and tbl_person.person_name like " + condition.getPersonName();
		}

		if (condition.getProId() != null && condition.getProId() != "") {
			String baseSql = sql;
			sql = sql + "and tbl_plan2." + dateList.get(0) + "=" + condition.getProId();
			for (int i = 1; i < dateList.size(); i++) {
				sql =sql + "union " + baseSql + " and tbl_plan2." + dateList.get(i) + "=" + condition.getProId();
			}

		}
		System.out.print(sql);
		return sql;
	}

	/**
	 * 改
	 */
	public String update(Person person) {
		SQL sql = new SQL();

		return sql.toString();
	}

	/**
	 * 增
	 */
	public String insert(Person person) {
		SQL sql = new SQL();

		return sql.toString();
	}
}
